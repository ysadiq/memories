{"version":3,"sources":["images/memories-Logo.png","images/memories-Text.png","redux/reducers/index.js","redux/reducers/posts.js","redux/constants/ActionTypes.js","redux/reducers/auth.js","components/PostDetails/styles.js","api/index.js","redux/actions/posts.js","components/PostDetails/CommentSection.jsx","components/PostDetails/PostDetails.js","components/Pagination/styles.js","components/Pagination/Pagination.jsx","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","components/Home/styles.js","components/Home/Home.js","components/Navbar/styles.js","components/Navbar/Navbar.js","components/Auth/styles.js","components/Auth/Input.js","redux/actions/auth.js","components/Auth/Auth.js","App.js","index.js","redux/configureStore.js"],"names":["module","exports","combineReducers","posts","state","isLoading","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter","auth","authData","localStorage","setItem","JSON","stringify","clear","makeStyles","theme","media","borderRadius","objectFit","width","maxHeight","card","display","breakpoints","down","flexWrap","flexDirection","section","margin","flex","imageSection","marginLeft","recommendedPosts","loadingPaper","justifyContent","alignItems","padding","height","commentsOuterContainer","commentsInnerContainer","overflowY","marginRight","API","axios","create","baseURL","interceptors","request","use","req","getItem","headers","Authorization","parse","token","fetchPost","id","get","fetchPosts","page","fetchPostsBySearch","searchQuery","search","tags","likePost","patch","comment","updatePost","updatedPost","deletePost","delete","signIn","formData","signUp","i","getPostsBySearch","dispatch","api","console","log","CommentSection","currentPostId","comments","classes","useStyles","useDispatch","useState","setComment","user","className","Typography","gutterBottom","variant","index","key","result","name","style","TextField","fullWidth","minRows","label","multiline","value","onChange","e","target","Button","marginTop","disabled","color","onClick","finalComment","commentPost","PostDetails","useSelector","history","useHistory","useParams","useEffect","getPost","join","Paper","elevation","CircularProgress","size","recommendedPost","length","component","title","tag","message","moment","createdAt","fromNow","Divider","src","selectedFile","alt","likes","cursor","push","openPost","ul","Paginate","getPosts","Pagination","count","Number","renderItem","item","PaginationItem","Link","to","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","position","overlay","top","left","overlay2","right","grid","details","cardActions","cardAction","textAlign","Post","setCurrentId","setLikes","userId","sub","hasLikedPost","find","like","handleLike","Likes","fontSize","Card","raised","ButtonBase","CardMedia","image","creator","stopPropagation","CardContent","CardActions","mainContainer","smMargin","spacing","actionDiv","Posts","Grid","container","xs","sm","md","lg","root","paper","form","fileInput","buttonSubmit","marginBottom","Form","currentId","postData","setPostData","p","autoComplete","noValidate","onSubmit","preventDefault","newPost","createPost","split","multiple","onDone","base64","align","appBarSearch","pagination","gridContainer","Home","query","URLSearchParams","useLocation","setSearch","setTags","searchPost","trim","Grow","in","Container","maxWidth","AppBar","onKeyDown","keyCode","handleKeyDown","onAdd","onDelete","tagToDelete","searchButton","appBar","heading","palette","primary","main","textDecoration","fontWeight","toolbar","profile","logout","userName","brandContainer","purple","getContrastText","deepPurple","Navbar","setUser","location","decode","exp","Date","getTime","memoriesText","memoriesLogo","Toolbar","Avatar","picture","charAt","username","avatar","secondary","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","initialState","firstName","lastName","email","password","confirmPassword","Auth","showPassword","setShowPassword","isSignup","setIsSignup","setFormData","googleSuccess","res","jwt_decode","credential","error","signup","signin","prevShowPassword","onSuccess","onFailure","prevIsSignup","App","clientId","process","path","exact","store","createStore","reducers","compose","applyMiddleware","thunk","logger","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cf69cf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/memories-Logo.8e9763ff.png\";","module.exports = __webpack_public_path__ + \"static/media/memories-Text.6c7b5ec0.png\";","import { combineReducers } from 'redux';\n\nimport posts from './posts';\nimport auth from './auth';\n\nexport default combineReducers({ posts, auth });","import { FETCH_ALL, FETCH_POST, CREATE, UPDATE, LIKE, DELETE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, COMMENT } from '../constants/ActionTypes';\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n    switch (action.type) {\n        case START_LOADING:\n            return { ...state, isLoading: true };\n        case END_LOADING:\n            return { ...state, isLoading: false };\n        case FETCH_ALL:\n            return {\n                ...state,\n                posts: action.payload.data,\n                currentPage: action.payload.currentPage,\n                numberOfPages: action.payload.numberOfPages,\n            };\n        case FETCH_BY_SEARCH:\n            return { ...state, posts: action.payload };\n        case FETCH_POST:\n            return { ...state, post: action.payload };\n        case CREATE:\n            return { ...state, posts: [...state.posts, action.payload] };\n        case UPDATE:\n        case LIKE:\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n        case COMMENT:\n            return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\n        case DELETE:\n            return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n        default:\n            return state;\n    }\n}","export const FETCH_ALL = 'FETCH_ALL';\nexport const FETCH_POST = 'FETCH_POST';\nexport const FETCH_BY_SEARCH = 'FETCH_BY_SEARCH';\nexport const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const LIKE = 'LIKE';\nexport const COMMENT = 'COMMENT';\nexport const DELETE = 'DELETE';\n\nexport const START_LOADING = 'START_LOADING';\nexport const END_LOADING = 'END_LOADING';\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\n","import { AUTH, LOGOUT } from '../constants/ActionTypes';\n\nexport default (state = { authData: null }, action) => {\n    switch (action.type) {\n        case AUTH:\n            localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\n            \n            return { ...state, authData: action?.data };\n        case LOGOUT:\n            localStorage.clear();\n\n            return { ...state, authData: null };\n        default:\n            return state;\n    }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  media: {\n    borderRadius: '20px',\n    objectFit: 'cover',\n    width: '100%',\n    maxHeight: '600px',\n\n  },\n  card: {\n    display: 'flex',\n    width: '100%',\n    [theme.breakpoints.down('sm')]: {\n      flexWrap: 'wrap',\n      flexDirection: 'column',\n    },\n  },\n  section: {\n    borderRadius: '20px',\n    margin: '10px',\n    flex: 1,\n  },\n  imageSection: {\n    marginLeft: '20px',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: 0,\n    },\n  },\n  recommendedPosts: {\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n    },\n  },\n  loadingPaper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px',\n    borderRadius: '15px',\n    height: '39vh',\n  },\n  commentsOuterContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  commentsInnerContainer: {\n    height: '200px',\n    overflowY: 'auto',\n    marginRight: '30px',\n  },\n}));","import axios from 'axios';\n\nconst API = axios.create({ baseURL: 'http://localhost:3001' });\n\nAPI.interceptors.request.use((req) => {\n    if (localStorage.getItem('profile')) {\n        req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile'))?.token}`;\n    }\n\n    return req;\n});\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const comment = (id, comment) => API.post(`/posts/${id}/commentPost`, { comment });\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);","import { FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, LIKE, COMMENT, DELETE } from '../constants/ActionTypes';\nimport * as api from '../../api';\n\n/* Action creators are simply functions that return an action, \nand an action is just an object that has a type and payload.\n\nconst getPosts = () => {\n    const action = { type: 'FETCH_ALL', payload: [] }\n    return action;\n}\n\nSince getPost is asynchronous logic we have to use \nRedux Thunk as shown below:\n\nconst getPosts = () => async (dispatch) => {    \n    const action = { type: 'FETCH_ALL', payload: [] }\n\n    dispatch(action);\n}\n*/\n\nexport const getPost = (id) => async (dispatch) => {   \n    try {\n        dispatch({ type: START_LOADING });\n\n        const { data } = await api.fetchPost(id);\n        \n        dispatch({ type: FETCH_POST, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    } \n\n}\n\nexport const getPosts = (page) => async (dispatch) => {   \n    try {\n        dispatch({ type: START_LOADING });\n\n        const { data } = await api.fetchPosts(page);\n        \n        dispatch({ type: FETCH_ALL, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    } \n\n}\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        \n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n        \n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n\n        const { data } = await api.createPost(post);\n        \n        dispatch({ type: CREATE, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING });\n        \n        const { data } = await api.updatePost(id, post);\n        dispatch({ type: UPDATE, payload: data });\n        dispatch({ type: END_LOADING });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n\n        dispatch({ type: DELETE, payload: id });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id);\n\n        dispatch({ type: LIKE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const commentPost = (id, comment) => async (dispatch) => {\n    try {\n        const { data } = await api.comment(id, comment);\n\n        dispatch({ type: COMMENT, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useState } from 'react';\nimport {Typography, TextField, Button} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\n\nimport useStyles from './styles';\nimport { commentPost } from '../../redux/actions/posts';\n\nconst CommentSection = ({ posts, currentPostId }) => {\n    const post = posts.filter((post) => post._id === currentPostId)[0];\n    const comments = post?.comments\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [comment, setComment] = useState('');\n\n    const user = JSON.parse(localStorage.getItem('profile'));\n\n    const handleClick = () => {\n        const finalComment = `${user.result.name}: ${comment}`;\n\n        dispatch(commentPost(post._id, finalComment));\n        setComment('');\n    };\n    \n    return (\n        <div>\n            <div className={classes.commentsOuterContainer}>\n                <div className={classes.commentsInnerContainer}>\n                    <Typography gutterBottom variant='h6'>Comments</Typography>\n                    { comments.map((comment, index) => (\n                        <Typography key={index} gutterBottom variant='subtitle1'>\n                            {comment}\n                        </Typography>\n                    ))}\n                </div>\n                    {user?.result.name && (\n                        <div style={{ width: '70%' }}>\n                            <Typography gutterBottom variant='h6'>Write a Comment</Typography>\n                            <TextField \n                                fullWidth\n                                minRows={4}\n                                variant='outlined'\n                                label='Comment'\n                                multiline\n                                value={comment}\n                                onChange={(e) => setComment(e.target.value)}\n                            />\n                            <Button \n                                style={{ marginTop: '10px' }} \n                                fullWidth \n                                disabled={!comment} \n                                variant='contained' \n                                color='primary'\n                                onClick={handleClick}>\n                                Comment\n                            </Button>\n                        </div>\n                    )}\n            </div>\n        </div>\n    )\n}\n\nexport default CommentSection;","import React, { useEffect } from 'react';\nimport { Paper, Typography, CircularProgress,Divider } from '@material-ui/core';\nimport {useDispatch, useSelector} from 'react-redux';\nimport moment from 'moment';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport CommentSection from './CommentSection';\nimport { getPost, getPostsBySearch } from '../../redux/actions/posts';\nimport useStyles from './styles';\n\nconst PostDetails = () => {\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const { id } = useParams();\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n  \n  useEffect(() => {\n    dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\n  }, [post]);\n  \n  if (!post) return null;\n\n  if (isLoading) {\n    return (\n      <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size='7em' />\n      </Paper>\n    );\n  }\n\n  const recommendedPost = posts.filter(({ _id }) => _id !== post._id);\n  if (posts.length === 0) return 'no posts founds';\n\n  const openPost = (_id) => history.push(`/posts/${_id}`);\n\n  return (\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n          <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n          <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\n          <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          <CommentSection posts={posts} currentPostId={post._id} />\n          <Divider style={{ margin: '20px 0' }} />\n        </div>\n        <div className={classes.imageSection}>\n          <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n        </div>\n      </div>\n      \n      { recommendedPost.length && (\n        <div className={classes.section}>\n          <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\n          <Divider />\n          <div className={classes.recommendedPosts}>\n            {recommendedPost.map(({ title, message, name, likes, selectedFile, _id}) => (\n              <div style={{margin: '20px', cursor: 'pointer'}} onClick={() => {openPost(_id)}} key={_id}>\n                <img src={selectedFile} alt={title} width='200px' />\n                <Typography gutterBottom variant='h6'>{title}</Typography>\n                <Typography gutterBottom variant='subtitle2'>{name}</Typography>\n                <Typography gutterBottom variant='subtitle2'>{message}</Typography>\n                <Typography gutterBottom variant='subtitle1'>Likes: {likes.length}</Typography>\n              </div>\n            ))}\n          </div>\n        </div>\n      ) }\n      </Paper>\n  )\n}\n\nexport default PostDetails","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\nul: {\n    justifyContent: ' space-round',\n}\n}))","import React, {useEffect } from 'react'\nimport { Pagination, PaginationItem } from '@material-ui/lab';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getPosts } from '../../redux/actions/posts';\nimport useStyles from './styles';\n\n\nconst Paginate = ({ page }) => {\n    const { numberOfPages } = useSelector((state) => state.posts)\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        if (page) dispatch(getPosts(page));\n    }, [page]);\n\n    return (\n        <Pagination \n            classes={{ ul: classes.ul }}\n            count={numberOfPages} \n            page={Number(page) || 1}\n            variant='outlined'\n            color='primary'\n            renderItem={(item) => (\n                <PaginationItem  {...item} component={Link} to={`/posts?page=${item.page}`} />\n            )}\n        />\n    )\n}\n\nexport default Paginate;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  cardAction: {\n    display: 'block',\n    textAlign: 'initial',\n  },\n});","import React, { useState } from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport {useHistory} from 'react-router-dom';\n\nimport { deletePost, likePost } from '../../../redux/actions/posts';\n\nconst Post = ({ post, setCurrentId }) => {\n    const user = JSON.parse(localStorage.getItem('profile'));\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const history = useHistory();\n    const [likes, setLikes] = useState(post?.likes);\n\n    // Google id and Mongo id\n    const userId = user?.result?.sub || user?.result?._id;\n    const hasLikedPost = post.likes.find((like) => like === userId);\n\n    const handleLike = async () => {\n        dispatch(likePost(post._id));\n        \n        if (hasLikedPost) {\n            setLikes(post.likes.filter((id) => id !== userId));\n        } else {\n            setLikes([...post.likes, userId]);\n        }\n    }\n\n\n    const Likes = () => {\n        if (likes.length > 0) {\n          return likes.find((like) => like === userId)\n            ? (\n              <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{likes.length > 2 \n                ? `You and ${likes.length - 1} others` \n                : `${likes.length} like${likes.length > 1 ? 's' : ''}` }</>\n            ) : (\n              <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{likes.length} {likes.length === 1 ? 'Like' : 'Likes'}</>\n            );\n        }\n    \n        return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\n    };\n\n    const openPost = () => history.push(`/posts/${post._id}`);\n\n    return (\n        <Card className={classes.card} raised elevation={6}>\n            <ButtonBase className={classes.cardAction} onClick={openPost}>\n                <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\n                <div className={classes.overlay}>\n                    <Typography variant='h6'>{post.name}</Typography>\n                    <Typography variant='body2'>{moment(post.createdAt).fromNow()}</Typography>\n                </div>\n                {(user?.result.sub === post?.creator || user?.result?._id === post?.creator) && (\n                    <div className={classes.overlay2}>\n                        <Button \n                            style={{color: 'white'}} \n                            size='small' \n                            onClick={(e) => {\n                                e.stopPropagation();\n                                setCurrentId(post._id)}\n                            }>\n                            <MoreHorizIcon fontSize='medium' />\n                        </Button>\n                    </div>\n                )}\n                <div className={classes.details}>\n                    <Typography variant='body2' color='textSecondary'>{post.tags.map((tag) => `#${tag} `)}</Typography>\n                </div>\n                <Typography className={classes.title} variant='h5' gutterBottom>{post.title}</Typography>\n                <CardContent>\n                    <Typography variant='body2' color='textSecondary' component='p' gutterBottom>{post.message}</Typography>\n                </CardContent>\n            </ButtonBase>\n            <CardActions className={classes.cardActions}>\n                <Button size='small' color='primary' disabled={!user?.result} onClick={handleLike}>\n                    <Likes />\n                </Button>\n                {(user?.result.sub === post?.creator || user?.result?._id === post?.creator) && (\n                    <Button size='small' color='primary' onClick={() => dispatch(deletePost(post._id)) }>\n                        <DeleteIcon fontSize='small' />\n                        &nbsp; Delete &nbsp;\n                    </Button>\n\n                )}\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default Post;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));","import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport Post from './Post/Post';\nimport useStyles from './styles';\n\nconst Posts = ({ setCurrentId }) => {\n    // fetching data from posts(state)\n    const { posts, isLoading } = useSelector((state) => state.posts);\n    const classes = useStyles();\n    \n    if (!posts.length && !isLoading) return 'No posts found';\n\n    return (\n        isLoading ? <CircularProgress /> : (\n            <Grid className={classes.container} container alignItems='stretch' spacing={3}>\n                {\n                    posts.map((post) => (\n                        <Grid key={post._id} item xs={12} sm={12} md={6} lg={4}>\n                            <Post post={post} setCurrentId={setCurrentId}/>\n                        </Grid>\n                    ))\n                }\n            </Grid>\n        )\n    );\n}\n\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));","import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../redux/actions/posts';\n\n// GET CURRENT POST ID\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: ''});\n    // fetching data from posts(state)\n    const post = useSelector((state) => currentId ? state.posts.posts.find((p) => p._id === currentId) : null );\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const user = JSON.parse(localStorage.getItem('profile'));\n\n    useEffect(() => {\n        if (post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (currentId) {\n            dispatch(updatePost(currentId, { ...postData, name: user?.result?.name}));\n        } else {\n            dispatch(createPost({ ...postData, name: user?.result?.name}));\n        }\n\n        clear();\n    }\n\n    const clear = () => {\n        setCurrentId(0);\n        setPostData({ title: '', message: '', tags: '', selectedFile: ''});\n    }\n\n    if (!user?.result?.name) {\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant='h6' align='center'>\n                    Please Sign in to create your own memories and like your friends' memories.\n                </Typography>\n            </Paper>\n        )\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant='h6'>{ currentId ? `Editing ${post.title}` : 'Creating a Memory' } </Typography>\n                <TextField \n                    name='title' \n                    variant='outlined' \n                    label='Title' \n                    fullWidth\n                    value={postData.title}\n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })} \n                />\n                <TextField \n                    name='message' \n                    variant='outlined' \n                    label='Message' \n                    fullWidth\n                    multiline\n                    minRows={4}\n                    value={postData.message}\n                    onChange={(e) => setPostData({ ...postData, message: e.target.value })} \n                />\n                <TextField \n                    name='tags' \n                    variant='outlined' \n                    label='Tags' \n                    fullWidth\n                    value={postData.tags}\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} \n                />\n                <div className={classes.fileInput}>\n                    <FileBase \n                        type='file' \n                        multiple={false} \n                        onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })} \n                    />\n                </div>\n                <Button \n                    className={classes.buttonSubmit} \n                    variant='contained' \n                    color='primary' \n                    size='large' \n                    type='submit' \n                    fullWidth>Submit\n                </Button>\n                <Button variant='contained' color='secondary' size='small' onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  appBarSearch: {\n    borderRadius: 4,\n    marginBottom: '1rem',\n    display: 'flex',\n    padding: '16px',\n  },\n  pagination: {\n    borderRadius: 4,\n    marginTop: '1rem',\n    padding: '16px',\n  },\n  gridContainer: {\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column-reverse',\n    },\n  },\n}));","import React, { useState } from 'react';\nimport { Container, Grow, Grid, Paper, AppBar, TextField, Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\n\nimport { getPostsBySearch } from '../../redux/actions/posts';\nimport Pagination from '../Pagination/Pagination';\nimport Posts from '../Posts/Posts';\nimport Form from '../Form/Form';\n\nimport useStyles from './styles';\n\nconst useQuery = () => {\n    return new URLSearchParams(useLocation().search);\n}\n\nconst Home = () => {\n    const [currentId, setCurrentId] = useState(null);\n    // define dispatch hook and use useEffect to dispatch the actions\n    const dispatch = useDispatch();\n    const query = useQuery();\n    const history = useHistory();\n    const page = query.get('page') || 1;\n    const classes = useStyles();\n    const [search, setSearch] = useState('');\n    const [tags, setTags] = useState([]);\n\n    const handleKeyDown = (e) => { \n        if (e.keyCode === 13) {\n            searchPost();\n        }\n    }\n\n    const handleAdd = (tag) => setTags([...tags, tag]);\n    const handleDelete = (tagToDelete) => setTags(tags.filter((tag) => tag !== tagToDelete));\n    \n    const searchPost = () => {\n        if (search.trim() || tags) {\n            dispatch(getPostsBySearch({ search, tags: tags.join(',') }));\n            history.push(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\n        } else {\n            history.push('/');\n        }\n    }   \n        \n    return (\n        <Grow in>\n            <Container maxWidth='xl'>\n                <Grid container justifyContent='space-between' alignItems='stretch' spacing={3} className={classes.gridContainer}>\n                    <Grid item xs={12} sm={6} md={9}>\n                        <Posts setCurrentId={setCurrentId} />\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={3}>\n                        <AppBar className={classes.appBarSearch} position='static' color='inherit' >\n                            <TextField\n                                name='search'\n                                variant='outlined'\n                                label='Search Memories'\n                                onKeyDown={(e) => handleKeyDown(e)}\n                                fullWidth\n                                value={search}\n                                onChange={(e) => setSearch(e.target.value)} \n                            />\n                            <ChipInput\n                                style={{ margin: '10px 0'}}\n                                value={tags}\n                                onAdd={handleAdd}\n                                onDelete={handleDelete}\n                                label='Search Tags'\n                                variant='outlined' \n                            />\n                            <Button onClick={searchPost} className={classes.searchButton} variant='contained' color='primary'>Search</Button>\n                        </AppBar>\n                        <Form currentId={currentId} setCurrentId={setCurrentId} />\n                        <Paper elevation={6} className={classes.pagination}>\n                            <Pagination page={page} />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Grow>\n    );\n}\n\nexport default Home;","import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 50px',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n    },\n  },\n  heading: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    fontSize: '2em',\n    fontWeight: 300,\n  },\n  image: {\n    marginLeft: '10px',\n    marginTop: '5px',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '400px',\n    [theme.breakpoints.down('sm')]: {\n      width: 'auto',\n    },\n  },\n  profile: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '400px',\n    alignItems: 'center',\n    [theme.breakpoints.down('sm')]: {\n      width: 'auto',\n      marginTop: 20,\n      justifyContent: 'center',\n    },\n  },\n  logout: {\n    marginLeft: '20px',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));","import React, { useState, useEffect }from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { AppBar, Avatar, Button, Toolbar, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport useStyles from './styles';\nimport memoriesLogo from '../../images/memories-Logo.png';\nimport memoriesText from '../../images/memories-Text.png';\nimport { LOGOUT } from '../../redux/constants/ActionTypes';\n\nconst Navbar = () => {\n    const classes = useStyles();\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n\n    const logout = () => {\n        dispatch({ type: LOGOUT });\n\n        history.push('/');\n        setUser(null);\n    }\n\n    useEffect(() => {\n        const token = user?.token;\n\n        if (token) {\n            const decodeToken = decode(token);\n\n            if (decodeToken.exp * 1000 < new Date().getTime()) logout();\n        }\n\n        setUser(JSON.parse(localStorage.getItem('profile')));\n    }, [location]);\n\n    return (\n        <AppBar className={classes.appBar} position='static' color='inherit'>\n            <Link to='/' className={classes.brandContainer}>\n                <img src={memoriesText} alt='icon' height='45px' />\n                <img className={classes.image} src={memoriesLogo} alt='icon' height='45px' />\n            </Link>\n            <Toolbar className={classes.toolbar}>\n                {user ? (\n                    <div className={classes.profile}>\n                        <Avatar \n                            className={classes.purple} \n                            alt={user.result.name} \n                            src={user.result.picture}>\n                                {user.result.name.charAt(0)}\n                        </Avatar>\n                        <Typography className={classes.username} variant='h6'>{user.result.name}</Typography>\n                        <Button variant='contained' className={classes.logout} color='secondary' onClick={logout} >Logout</Button>\n                    </div>\n                ) : (\n                    <Button component={Link} to='/auth' variant='contained' color='primary'>Login</Button>\n                )}\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Navbar;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));","import React from 'react'\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => {\n  return (\n    <Grid item xs={12} sm={half ? 6 : 12}>\n        <TextField\n            name={name}\n            onChange={handleChange}\n            variant=\"outlined\"\n            required\n            fullWidth\n            label={label}\n            autoFocus={autoFocus}\n            type={type}\n            InputProps={name === 'password' ? {\n                endAdornment: (\n                    <InputAdornment position='end'>\n                        <IconButton onClick={handleShowPassword}>\n                            {type === 'password' ? <VisibilityOff /> : <Visibility />}\n                        </IconButton>\n                    </InputAdornment>\n                )\n            } : null }\n        />\n    </Grid>\n  )\n}\n\nexport default Input;","import { AUTH } from '../constants/ActionTypes';\nimport * as api from '../../api';\n\nexport const signin = (formData, history) => async(dispatch) => {\n    try {\n        const { data } = await api.signIn(formData);\n\n        dispatch({ type: AUTH, data });\n        \n        history.push('/');\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const signup = (formData, history) => async(dispatch) => {\n    try {\n        const { data } = await api.signUp(formData);\n        \n        dispatch({ type: AUTH, data });\n        \n        history.push('/');\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwt_decode from \"jwt-decode\";\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport { signin, signup } from '../../redux/actions/auth';\n\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n}\n\nconst Auth = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (isSignup) {\n      dispatch(signup(formData, history));\n    } else {\n      dispatch(signin(formData, history));\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n  };\n\n  const switchMode = () => {\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async (res) => {\n    const result = jwt_decode(res?.credential);\n\n    try {\n        dispatch({ type: 'AUTH', data: { result, token: res?.credential }});\n\n        // Redirect to homepage\n        history.push('/');\n    } catch (error) {\n        console.log(error)\n    }\n  };\n\n  const googleFailure = (error) => {\n    console.log(error);\n    console.log('Google Sign In was unsuccessful. Try Again Later');\n  };\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant='h5'>{ isSignup ? 'Sign up' : 'Sign In'}</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n                <>\n                  <Input \n                    name='firstName' \n                    label='First Name' \n                    handleChange={handleChange} \n                    autoFocus half />\n                  <Input \n                    name='lastName' \n                    label='Last Name' \n                    handleChange={handleChange} \n                    half />\n                </>\n              )}\n              <Input \n                name='email' \n                label='Email Address' \n                handleChange={handleChange} \n                type='email' />\n              <Input \n                name='password' \n                label='Password' \n                handleChange={handleChange} \n                type={showPassword ? 'text' : 'password'} \n                handleShowPassword={handleShowPassword} />\n              { isSignup && <Input \n                              name='confirmPassword' \n                              label='Repeat Password' \n                              handleChange={handleChange} \n                              type='password' /> }\n          </Grid>\n          <Button \n            type='submit' \n            fullWidth \n            variant='contained' \n            color='primary' \n            className={classes.submit}>\n            { isSignup ? 'Sign Up' : 'Sign In' }\n          </Button>\n          <GoogleLogin\n            onSuccess={googleSuccess}\n            onFailure={googleFailure}\n          />\n          <Grid container justifyContent='center'>\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup \n                  ? 'Already have an account? Sign In' \n                  : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default Auth;","import React from 'react';\nimport { Container } from '@material-ui/core';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { GoogleOAuthProvider } from '@react-oauth/google'\n\nimport PostDetails from './components/PostDetails/PostDetails';\nimport Home from './components/Home/Home';\nimport Navbar from './components/Navbar/Navbar';\nimport Auth from './components/Auth/Auth';\n\nconst App = () => {\n    const user = JSON.parse(localStorage.getItem('profile'));\n\n    return (\n        <GoogleOAuthProvider clientId={process.env.REACT_APP_PUBLIC_GOOGLE_CLIENT_API_TOKEN}>\n            <BrowserRouter>\n                <Container maxWidth=\"xl\">\n                    <Navbar />\n                    <Switch>\n                        <Route path='/' exact component={() => <Redirect to='/posts' />} />\n                        <Route path='/posts' exact component={Home} />\n                        <Route path='/posts/search' exact component={Home} />\n                        <Route path='/posts/:id' component={PostDetails} />\n                        <Route path='/auth' exact component={() => (!user ? <Auth /> : <Redirect to='/posts' />)} />\n                    </Switch>\n                </Container>\n            </BrowserRouter>\n        </GoogleOAuthProvider>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nimport App from './App';\nimport './index.css';\n\nconst store = ConfigureStore();\n\nReactDom.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport reducers from './reducers';\n\nexport const ConfigureStore = () => {\n    const store = createStore(reducers, compose(applyMiddleware(thunk, logger)));\n\n    return store;\n}"],"sourceRoot":""}